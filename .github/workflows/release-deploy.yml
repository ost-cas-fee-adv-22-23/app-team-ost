name: Release and Deploy App

on:
  # push:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    name: Build and Release Docker Image
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: europe-west6-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.TF_DEPLOYER_KEY }}

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19
          extra_plugins: |
            @codedependant/semantic-release-docker
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to Google Artifact Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL_PROD }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            ZITADEL_ISSUER=${{ secrets.ZITADEL_ISSUER }}
            ZITADEL_CLIENT_ID=${{ secrets.ZITADEL_CLIENT_ID }}
            REVALIDATE_SECRET_TOKEN=${{ secrets.REVALIDATE_SECRET_TOKEN }}
            NEXT_PUBLIC_QWACKER_API_URL=${{ secrets.NEXT_PUBLIC_QWACKER_API_URL }}
            NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL_PROD }}
          secrets: |
            "npmrc=${{ secrets.NPMRC }}"
          push: true
          tags: |
            europe-west6-docker.pkg.dev/app-team-ost/team-ost-repo/app:latest
            europe-west6-docker.pkg.dev/app-team-ost/team-ost-repo/app:${{ github.sha }}


#  deploy-production:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 18.x
#          registry-url: https://npm.pkg.github.com/
#          scope: '@smartive-education'
#      - name: Install Vercel CLI
#        run: npm install --global vercel@latest
#      - name: Pull Vercel Environment Information
#        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
#      - name: Build Project Artifacts
#        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
#          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
#          NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
#          NEXT_PUBLIC_QWACKER_API_URL: ${{ secrets.NEXT_PUBLIC_QWACKER_API_URL }}
#          ZITADEL_ISSUER: ${{ secrets.ZITADEL_ISSUER }}
#          ZITADEL_CLIENT_ID: ${{ secrets.ZITADEL_CLIENT_ID }}
#          REVALIDATE_SECRET_TOKEN: ${{ secrets.REVALIDATE_SECRET_TOKEN }}
#      - name: Deploy Project Artifacts to Vercel
#        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
