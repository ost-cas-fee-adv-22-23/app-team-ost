name: Release and Deploy App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    name: Build and Release Docker Image
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: europe-west6-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.TF_DEPLOYER_KEY }}

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19
          extra_plugins: |
            @codedependant/semantic-release-docker
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to Google Artifact Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL_PROD }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            ZITADEL_ISSUER=${{ secrets.ZITADEL_ISSUER }}
            ZITADEL_CLIENT_ID=${{ secrets.ZITADEL_CLIENT_ID }}
            REVALIDATE_SECRET_TOKEN=${{ secrets.REVALIDATE_SECRET_TOKEN }}
            NEXT_PUBLIC_QWACKER_API_URL=${{ secrets.NEXT_PUBLIC_QWACKER_API_URL }}
            NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL_PROD }}
          secrets: |
            "npmrc=${{ secrets.NPMRC }}"
          push: true
          tags: |
            europe-west6-docker.pkg.dev/app-team-ost/team-ost-repo/app:latest
            europe-west6-docker.pkg.dev/app-team-ost/team-ost-repo/app:${{ github.sha }}

  deploy:
    name: Deploy Docker Image on Google Cloud Platform
    runs-on: ubuntu-latest
    env:
      TF_CLI_ARGUMENTS: -var imageTag=${{ github.sha }} -var buildVersion=${{ needs.release.outputs.new_release_version }} -var nextauthUrl=${{ secrets.NEXTAUTH_URL_PROD }} -var nextauthSecret=${{ secrets.NEXTAUTH_SECRET }} -var zitadelIssuer=${{ secrets.ZITADEL_ISSUER }} -var zitadelClientId=${{ secrets.ZITADEL_CLIENT_ID }} -var revalidateSecretToken=${{ secrets.REVALIDATE_SECRET_TOKEN }} -var nextPublicQwackerApiUrl=${{ secrets.NEXT_PUBLIC_QWACKER_API_URL }} -var nextPublicUrl=${{ secrets.NEXT_PUBLIC_URL_PROD }}
    defaults:
      run:
        working-directory: ./terraform
    needs:
      - release
    if: needs.release.outputs.new_release_published == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.TF_DEPLOYER_KEY }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve ${{ env.TF_CLI_ARGUMENTS }}
